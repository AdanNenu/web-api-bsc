// <auto-generated />
using System;
using EmpresaBSC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmpresaBSC.Migrations
{
    [DbContext(typeof(CBSDbContext))]
    [Migration("20250316211455_BD1")]
    partial class BD1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmpresaBSC.Model.Contrasena", b =>
                {
                    b.Property<int>("PkContrasena")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkContrasena"));

                    b.Property<string>("ContrasenaUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int>("FkUsuario")
                        .HasColumnType("int");

                    b.Property<int>("FkUsuarioRegistro")
                        .HasColumnType("int");

                    b.HasKey("PkContrasena");

                    b.HasIndex("FkUsuario");

                    b.ToTable("Contrasenas");
                });

            modelBuilder.Entity("EmpresaBSC.Model.DetallePedido", b =>
                {
                    b.Property<int>("PkDetallePedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkDetallePedido"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("ClaveProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CostoUnidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FkPedido")
                        .HasColumnType("int");

                    b.Property<decimal>("IvaAplicado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PedidoPkPedido")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoPkProducto")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PkDetallePedido");

                    b.HasIndex("PedidoPkPedido");

                    b.HasIndex("ProductoPkProducto");

                    b.ToTable("DetallesPedido");
                });

            modelBuilder.Entity("EmpresaBSC.Model.Existencia", b =>
                {
                    b.Property<int>("PkExistencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkExistencia"));

                    b.Property<int>("CantidadDisponible")
                        .HasColumnType("int");

                    b.Property<int>("FkProducto")
                        .HasColumnType("int");

                    b.HasKey("PkExistencia");

                    b.ToTable("Existencias");
                });

            modelBuilder.Entity("EmpresaBSC.Model.Pedido", b =>
                {
                    b.Property<int>("PkPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkPedido"));

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int>("FkUsuarioRegistro")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPedido")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PkPedido");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("EmpresaBSC.Model.Perfil", b =>
                {
                    b.Property<int>("PkPerfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkPerfil"));

                    b.Property<string>("DescripcionPerfil")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NombrePerfil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PkPerfil");

                    b.ToTable("Perfiles");
                });

            modelBuilder.Entity("EmpresaBSC.Model.Permiso", b =>
                {
                    b.Property<int>("PkPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkPermiso"));

                    b.Property<string>("DescripcionPermiso")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NombrePermiso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PkPermiso");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("EmpresaBSC.Model.PermisosPerfil", b =>
                {
                    b.Property<int>("PkPermisosPerfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkPermisosPerfil"));

                    b.Property<int>("FkPerfil")
                        .HasColumnType("int");

                    b.Property<int>("FkPermiso")
                        .HasColumnType("int");

                    b.Property<int?>("PerfilPkPerfil")
                        .HasColumnType("int");

                    b.Property<int?>("PermisoPkPermiso")
                        .HasColumnType("int");

                    b.HasKey("PkPermisosPerfil");

                    b.HasIndex("PerfilPkPerfil");

                    b.HasIndex("PermisoPkPermiso");

                    b.ToTable("PermisosPerfil");
                });

            modelBuilder.Entity("EmpresaBSC.Model.PrecioProducto", b =>
                {
                    b.Property<int>("PkPrecioProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkPrecioProducto"));

                    b.Property<decimal>("CostoSinIva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FkProducto")
                        .HasColumnType("int");

                    b.HasKey("PkPrecioProducto");

                    b.ToTable("PreciosProducto");
                });

            modelBuilder.Entity("EmpresaBSC.Model.Usuario", b =>
                {
                    b.Property<int>("PkUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkUsuario"));

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int>("FkPerfil")
                        .HasColumnType("int");

                    b.Property<int>("FkUsuarioRegistro")
                        .HasColumnType("int");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Nombre");

                    b.Property<int?>("PerfilPkPerfil")
                        .HasColumnType("int");

                    b.HasKey("PkUsuario");

                    b.HasIndex("PerfilPkPerfil");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("EmpresaBSC.Models.Producto", b =>
                {
                    b.Property<int>("PkProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkProducto"));

                    b.Property<string>("ClaveProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int>("FkUsuarioRegistro")
                        .HasColumnType("int");

                    b.Property<decimal>("IvaProducto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PkProducto");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("EmpresaBSC.Model.Contrasena", b =>
                {
                    b.HasOne("EmpresaBSC.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("FkUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EmpresaBSC.Model.DetallePedido", b =>
                {
                    b.HasOne("EmpresaBSC.Model.Pedido", null)
                        .WithMany("DetallesPedido")
                        .HasForeignKey("PedidoPkPedido");

                    b.HasOne("EmpresaBSC.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoPkProducto");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("EmpresaBSC.Model.PermisosPerfil", b =>
                {
                    b.HasOne("EmpresaBSC.Model.Perfil", null)
                        .WithMany("PermisosPerfil")
                        .HasForeignKey("PerfilPkPerfil");

                    b.HasOne("EmpresaBSC.Model.Permiso", null)
                        .WithMany("PermisosPerfil")
                        .HasForeignKey("PermisoPkPermiso");
                });

            modelBuilder.Entity("EmpresaBSC.Model.Usuario", b =>
                {
                    b.HasOne("EmpresaBSC.Model.Perfil", null)
                        .WithMany("Usuarios")
                        .HasForeignKey("PerfilPkPerfil");
                });

            modelBuilder.Entity("EmpresaBSC.Model.Pedido", b =>
                {
                    b.Navigation("DetallesPedido");
                });

            modelBuilder.Entity("EmpresaBSC.Model.Perfil", b =>
                {
                    b.Navigation("PermisosPerfil");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("EmpresaBSC.Model.Permiso", b =>
                {
                    b.Navigation("PermisosPerfil");
                });
#pragma warning restore 612, 618
        }
    }
}
